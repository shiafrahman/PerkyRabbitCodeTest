// <auto-generated />
using System;
using EmployeeCertificateManagement.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeCertificateManagement.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240126063905_tinit")]
    partial class tinit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeCertificateManagement.Library.Domain.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Certificates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            date = new DateTime(2024, 1, 26, 12, 39, 4, 984, DateTimeKind.Local).AddTicks(1613)
                        },
                        new
                        {
                            Id = 2,
                            date = new DateTime(2024, 1, 25, 12, 39, 4, 984, DateTimeKind.Local).AddTicks(1623)
                        },
                        new
                        {
                            Id = 3,
                            date = new DateTime(2024, 1, 24, 12, 39, 4, 984, DateTimeKind.Local).AddTicks(1629)
                        },
                        new
                        {
                            Id = 4,
                            date = new DateTime(2024, 1, 23, 12, 39, 4, 984, DateTimeKind.Local).AddTicks(1630)
                        },
                        new
                        {
                            Id = 5,
                            date = new DateTime(2024, 1, 22, 12, 39, 4, 984, DateTimeKind.Local).AddTicks(1631)
                        });
                });

            modelBuilder.Entity("EmployeeCertificateManagement.Library.Domain.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeptName = "IT"
                        },
                        new
                        {
                            Id = 2,
                            DeptName = "HR"
                        },
                        new
                        {
                            Id = 3,
                            DeptName = "Finance"
                        },
                        new
                        {
                            Id = 4,
                            DeptName = "Marketing"
                        },
                        new
                        {
                            Id = 5,
                            DeptName = "Operations"
                        });
                });

            modelBuilder.Entity("EmployeeCertificateManagement.Library.Domain.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CertificateId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.HasIndex("DeptId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CertificateId = 1,
                            DeptId = 1,
                            EmpName = "John Doe",
                            Salary = 50000m
                        },
                        new
                        {
                            Id = 2,
                            CertificateId = 2,
                            DeptId = 2,
                            EmpName = "Jane Doe",
                            Salary = 60000m
                        },
                        new
                        {
                            Id = 3,
                            CertificateId = 3,
                            DeptId = 3,
                            EmpName = "Bob Smith",
                            Salary = 70000m
                        },
                        new
                        {
                            Id = 4,
                            CertificateId = 4,
                            DeptId = 4,
                            EmpName = "Alice Johnson",
                            Salary = 55000m
                        },
                        new
                        {
                            Id = 5,
                            CertificateId = 5,
                            DeptId = 5,
                            EmpName = "Charlie Brown",
                            Salary = 80000m
                        });
                });

            modelBuilder.Entity("EmployeeCertificateManagement.Library.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmployeeCertificateManagement.Library.Domain.Employee", b =>
                {
                    b.HasOne("EmployeeCertificateManagement.Library.Domain.Certificate", "Certificate")
                        .WithMany("Employees")
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeCertificateManagement.Library.Domain.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeCertificateManagement.Library.Domain.Certificate", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EmployeeCertificateManagement.Library.Domain.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
